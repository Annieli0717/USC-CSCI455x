Name: Dunxuan Li (Annie)
USC NetId: 6625999096
CSCI 455 PA1
Spring 2019

----------------------------------------------
CERTIFY IT'S YOUR WORK

"I certify that the work submitted for this assignment does not
violate USC's student conduct code.  In particular, the work is my
own, not a collaboration, and does not involve code created by other
people, except for the the resources explicitly mentioned in the CS 455
Course Syllabus.  And I did not share my solution or parts of it with
other students in the course."

Initial below to "sign" the above statement:

DL
----------------------------------------------
ACKNOWLEDGE ANY OUTSIDE SOURCES

List here any code you submitted for this assignment that was written
with significant help of a course staff member, or code used from the
textbook.  Be specific about what methods or algorithms are involved,
and what sections of the textbook are involved (if applicable): [you do
not need to list any of the code that we wrote for the assignment,
i.e., the contents of the starter files for the assignment]


----------------------------------------------
KNOWN BUGS or LIMITATIONS:



----------------------------------------------
ANY OTHER NOTES FOR THE GRADER:



----------------------------------------------
ANSWERS TO ASSIGNMENT README QUESTIONS (if applicable):

******* Question 1 ********
For this course, we are only allowed to use 
(1) code written by the course staff for the purposes of helping students 
(2) code from the textbook for the course. 
(3) If I use any code from the web that are not written by myself, I should acknowledge sources in README file. 



******* Question 2 ********
P(two heads) = 0.25 
P(two tails) = 0.25
P(one head and one tail) = 0.5

P(one head and one tail) is the sum of P(two heads) and P(two tails) because there are 4 possible cases in total with two coin tosses:
HH HT TH TT
Since we don't care about the order of each output, both HT and TH count as "one head and one tail".
Thus, P(one head and one tail) is twice higher than P(two heads) and P(two tails).


******* Question 3 ********
Roughly 1000 trails.  (Law of large numbers)


******* Question 4 ********
Roughly 2,000,000,000 we can do before it crashes with an overflow error.

The largest value that I tried where it still worked correctly is  2,147,483,647,
which is the maximum value of int type in java. 

Any number greater than 2,147,483,647 will overflow. 

